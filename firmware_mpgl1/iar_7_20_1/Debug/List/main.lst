###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.1.7305/W32 for ARM        15/Oct/2017  21:32:05
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\jimmy\OneDrive\Documents\GitHub\Razor_Atmel\firmware_mpgl1\application\main.c
#    Command line =  
#        C:\Users\jimmy\OneDrive\Documents\GitHub\Razor_Atmel\firmware_mpgl1\application\main.c
#        --preprocess=cl
#        C:\Users\jimmy\OneDrive\Documents\GitHub\Razor_Atmel\firmware_mpgl1\iar_7_20_1\Debug\List\
#        -lC
#        C:\Users\jimmy\OneDrive\Documents\GitHub\Razor_Atmel\firmware_mpgl1\iar_7_20_1\Debug\List\
#        -o
#        C:\Users\jimmy\OneDrive\Documents\GitHub\Razor_Atmel\firmware_mpgl1\iar_7_20_1\Debug\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\jimmy\OneDrive\Documents\GitHub\Razor_Atmel\firmware_mpgl1\iar_7_20_1\
#        -I
#        C:\Users\jimmy\OneDrive\Documents\GitHub\Razor_Atmel\firmware_mpgl1\iar_7_20_1\..\bsp\
#        -I
#        C:\Users\jimmy\OneDrive\Documents\GitHub\Razor_Atmel\firmware_mpgl1\iar_7_20_1\..\drivers\
#        -I
#        C:\Users\jimmy\OneDrive\Documents\GitHub\Razor_Atmel\firmware_mpgl1\iar_7_20_1\..\application\
#        -I
#        C:\Users\jimmy\OneDrive\Documents\GitHub\Razor_Atmel\firmware_mpgl1\iar_7_20_1\..\..\firmware_mpg_common\
#        -I
#        C:\Users\jimmy\OneDrive\Documents\GitHub\Razor_Atmel\firmware_mpgl1\iar_7_20_1\..\..\firmware_mpg_common\application\
#        -I
#        C:\Users\jimmy\OneDrive\Documents\GitHub\Razor_Atmel\firmware_mpgl1\iar_7_20_1\..\..\firmware_mpg_common\cmsis\
#        -I
#        C:\Users\jimmy\OneDrive\Documents\GitHub\Razor_Atmel\firmware_mpgl1\iar_7_20_1\..\..\firmware_mpg_common\drivers\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        C:\Users\jimmy\OneDrive\Documents\GitHub\Razor_Atmel\firmware_mpgl1\iar_7_20_1\Debug\List\main.lst
#    Object file  =  
#        C:\Users\jimmy\OneDrive\Documents\GitHub\Razor_Atmel\firmware_mpgl1\iar_7_20_1\Debug\Obj\main.o
#
###############################################################################

C:\Users\jimmy\OneDrive\Documents\GitHub\Razor_Atmel\firmware_mpgl1\application\main.c
      1          /***********************************************************************************************************************
      2          File: main.c                                                                
      3          
      4          Description:
      5          Container for the MPG firmware.  
      6          ***********************************************************************************************************************/
      7          
      8          #include "configuration.h"
      9          
     10          /***********************************************************************************************************************
     11          Global variable definitions with scope across entire project.
     12          All Global variable names shall start with "G_"
     13          ***********************************************************************************************************************/
     14          /* New variables */

   \                                 In section .bss, align 4
     15          volatile u32 G_u32SystemFlags = 0;                     /* Global system flags */
   \                     G_u32SystemFlags:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     16          volatile u32 G_u32ApplicationFlags = 0;                /* Global applications flags: set when application is successfully initialized */
   \                     G_u32ApplicationFlags:
   \   00000000                      DS8 4
     17          
     18          /*--------------------------------------------------------------------------------------------------------------------*/
     19          /* External global variables defined in other files (must indicate which file they are defined in) */
     20          extern volatile u32 G_u32SystemTime1ms;                /* From board-specific source file */
     21          extern volatile u32 G_u32SystemTime1s;                 /* From board-specific source file */
     22          
     23          
     24          /***********************************************************************************************************************
     25          Global variable definitions with scope limited to this local application.
     26          Variable names shall start with "Main_" and be declared as static.
     27          ***********************************************************************************************************************/
     28          static u8 Main_u8Servers = 0; /* # of active servers */
     29          
     30          /***********************************************************************************************************************
     31          Main Program
     32          Main has two sections:
     33          
     34          1. Initialization which is run once on power-up or reset.  All drivers and applications are setup here without timing
     35          contraints but must complete execution regardless of success or failure of starting the application. 
     36          
     37          2. Super loop which runs infinitely giving processor time to each application.  The total loop time should not exceed
     38          1ms of execution time counting all application execution.  SystemSleep() will execute to complete the remaining time in
     39          the 1ms period.
     40          ***********************************************************************************************************************/
     41          

   \                                 In section .text, align 4, keep-with-next
     42          void main(void)
     43          {
   \                     main: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB08D             SUB      SP,SP,#+52
     44            u32 au32BigArray[] = {5, 4, 3, 2, 1,};
                       ^
Warning[Pe177]: variable "au32BigArray" was declared but never referenced
   \   00000004   0xA808             ADD      R0,SP,#+32
   \   00000006   0x4939             LDR.N    R1,??main_0
   \   00000008   0x2214             MOVS     R2,#+20
   \   0000000A   0x.... 0x....      BL       __aeabi_memcpy4
     45            DrinkType aeDrinkArray[3] = {BEER, SHOOTER};
                             ^
Warning[Pe177]: variable "aeDrinkArray" was declared but never referenced
   \   0000000E   0xA802             ADD      R0,SP,#+8
   \   00000010   0x4937             LDR.N    R1,??main_0+0x4
   \   00000012   0x680A             LDR      R2,[R1, #0]
   \   00000014   0x6002             STR      R2,[R0, #+0]
     46            
     47            
     48            
     49            
     50            
     51            u8 u8Test = 0xA5;
   \   00000016   0x20A5             MOVS     R0,#+165
   \   00000018   0xF88D 0x0004      STRB     R0,[SP, #+4]
     52            u8* pu8Example;
     53            u32 u32Test = 0x0000ffff;
   \   0000001C   0xF64F 0x70FF      MOVW     R0,#+65535
   \   00000020   0x9000             STR      R0,[SP, #+0]
     54            u32* pu32Example;
     55            
     56            
     57            u8 u8CurrentServer;
                      ^
Warning[Pe550]: variable "u8CurrentServer" was set but never used
     58            ServerType sServer1;
     59            ServerType* psServerParser;
     60          
     61            psServerParser = &sServer1;
   \   00000022   0xA803             ADD      R0,SP,#+12
   \   00000024   0x0007             MOVS     R7,R0
     62            sServer1.u8ServerNumber = 18;
   \   00000026   0x2012             MOVS     R0,#+18
   \   00000028   0x9003             STR      R0,[SP, #+12]
     63            u8CurrentServer = psServerParser -> u8ServerNumber;
   \   0000002A   0x6838             LDR      R0,[R7, #+0]
   \   0000002C   0x0006             MOVS     R6,R0
     64            
     65            /* Load the addresses into our pointer variables */
     66            pu8Example = &u8Test;
   \   0000002E   0xA801             ADD      R0,SP,#+4
   \   00000030   0x0004             MOVS     R4,R0
     67            pu32Example = &u32Test;
   \   00000032   0xA800             ADD      R0,SP,#+0
   \   00000034   0x0005             MOVS     R5,R0
     68            
     69            /* Access the bariables via the pointers (two different ways) */
     70            *pu8Example += 1;
   \   00000036   0x7820             LDRB     R0,[R4, #+0]
   \   00000038   0x1C40             ADDS     R0,R0,#+1
   \   0000003A   0x7020             STRB     R0,[R4, #+0]
     71            (*pu32Example)++;
   \   0000003C   0x6828             LDR      R0,[R5, #+0]
   \   0000003E   0x1C40             ADDS     R0,R0,#+1
   \   00000040   0x6028             STR      R0,[R5, #+0]
     72            
     73            /* Move the pointers (watch out for the second one!) */
     74            pu8Example++;
   \   00000042   0x1C64             ADDS     R4,R4,#+1
     75            *pu32Example++;
   \   00000044   0x1D2D             ADDS     R5,R5,#+4
     76            
     77            G_u32SystemFlags |= _SYSTEM_INITIALIZING;
   \   00000046   0x482B             LDR.N    R0,??main_0+0x8
   \   00000048   0x6800             LDR      R0,[R0, #+0]
   \   0000004A   0xF050 0x4000      ORRS     R0,R0,#0x80000000
   \   0000004E   0x4929             LDR.N    R1,??main_0+0x8
   \   00000050   0x6008             STR      R0,[R1, #+0]
     78            // Check for watch dog restarts
     79            
     80            
     81            u32 u32UselessVariableForExample;
                       ^
Warning[Pe177]: variable "u32UselessVariableForExample" was declared but never
          referenced

  static u8 Main_u8Servers = 0; /* # of active servers */
            ^
"C:\Users\jimmy\OneDrive\Documents\GitHub\Razor_Atmel\firmware_mpgl1\application\main.c",28  Warning[Pe177]: 
          variable "Main_u8Servers" was declared but never referenced
     82            
     83            /* Low level initialization */
     84            WatchDogSetup(); /* During development, set to not reset processor if timeout */
   \   00000052   0x.... 0x....      BL       WatchDogSetup
     85            GpioSetup();
   \   00000056   0x.... 0x....      BL       GpioSetup
     86            ClockSetup();
   \   0000005A   0x.... 0x....      BL       ClockSetup
     87            InterruptSetup();
   \   0000005E   0x.... 0x....      BL       InterruptSetup
     88            SysTickSetup();
   \   00000062   0x.... 0x....      BL       SysTickSetup
     89          
     90            /* Driver initialization */
     91            MessagingInitialize();
   \   00000066   0x.... 0x....      BL       MessagingInitialize
     92            UartInitialize();
   \   0000006A   0x.... 0x....      BL       UartInitialize
     93            DebugInitialize();
   \   0000006E   0x.... 0x....      BL       DebugInitialize
     94          
     95            /* Debug messages through DebugPrintf() are available from here */
     96          
     97            SspInitialize();
   \   00000072   0x.... 0x....      BL       SspInitialize
     98            TWIInitialize();
   \   00000076   0x.... 0x....      BL       TWIInitialize
     99          
    100            LedInitialize();
   \   0000007A   0x.... 0x....      BL       LedInitialize
    101            ButtonInitialize();
   \   0000007E   0x.... 0x....      BL       ButtonInitialize
    102          
    103          #ifndef SIMULATOR_MODE
    104            LcdInitialize();
   \   00000082   0x.... 0x....      BL       LcdInitialize
    105            AntInitialize();
   \   00000086   0x.... 0x....      BL       AntInitialize
    106            SdCardInitialize();
   \   0000008A   0x.... 0x....      BL       SdCardInitialize
    107          #endif /* SIMULATOR_MODE */
    108          
    109            /* Application initialization */
    110          //  BoardTestInitialize();
    111          //  AudioTestInitialize();
    112              UserAppInitialize();
   \   0000008E   0x.... 0x....      BL       UserAppInitialize
    113            
    114            /* Exit initialization */
    115            SystemStatusReport();
   \   00000092   0x.... 0x....      BL       SystemStatusReport
    116            G_u32SystemFlags &= ~_SYSTEM_INITIALIZING;
   \   00000096   0x4817             LDR.N    R0,??main_0+0x8
   \   00000098   0x6800             LDR      R0,[R0, #+0]
   \   0000009A   0x0040             LSLS     R0,R0,#+1        ;; ZeroExtS R0,R0,#+1,#+1
   \   0000009C   0x0840             LSRS     R0,R0,#+1
   \   0000009E   0x4915             LDR.N    R1,??main_0+0x8
   \   000000A0   0x6008             STR      R0,[R1, #+0]
    117            
    118            /* Super loop */  
    119            while(1)
    120            {
    121              WATCHDOG_BONE();
   \                     ??main_1: (+1)
   \   000000A2   0x4815             LDR.N    R0,??main_0+0xC  ;; 0xa5000001
   \   000000A4   0x4915             LDR.N    R1,??main_0+0x10  ;; 0x400e1250
   \   000000A6   0x6008             STR      R0,[R1, #+0]
    122              
    123              /* Drivers */
    124              LedUpdate();
   \   000000A8   0x.... 0x....      BL       LedUpdate
    125              ButtonRunActiveState();
   \   000000AC   0x.... 0x....      BL       ButtonRunActiveState
    126              UartRunActiveState();
   \   000000B0   0x.... 0x....      BL       UartRunActiveState
    127              SspRunActiveState();
   \   000000B4   0x.... 0x....      BL       SspRunActiveState
    128              TWIRunActiveState();
   \   000000B8   0x.... 0x....      BL       TWIRunActiveState
    129              MessagingRunActiveState();
   \   000000BC   0x.... 0x....      BL       MessagingRunActiveState
    130              DebugRunActiveState();
   \   000000C0   0x.... 0x....      BL       DebugRunActiveState
    131              
    132          #ifndef SIMULATOR_MODE
    133              LcdRunActiveState();
   \   000000C4   0x.... 0x....      BL       LcdRunActiveState
    134              AntRunActiveState();
   \   000000C8   0x.... 0x....      BL       AntRunActiveState
    135              SdCardRunActiveState();
   \   000000CC   0x.... 0x....      BL       SdCardRunActiveState
    136          #endif /* SIMULATOR_MODE */
    137          
    138              /* Applications */
    139              //BoardTestRunActiveState();
    140              //AudioTestRunActiveState();
    141              UserAppRunActiveState();
   \   000000D0   0x.... 0x....      BL       UserAppRunActiveState
    142              
    143              /* System sleep*/
    144              HEARTBEAT_OFF();
   \   000000D4   0xF05F 0x4000      MOVS     R0,#-2147483648
   \   000000D8   0x4909             LDR.N    R1,??main_0+0x14  ;; 0x400e0c30
   \   000000DA   0x6008             STR      R0,[R1, #+0]
    145              SystemSleep();
   \   000000DC   0x.... 0x....      BL       SystemSleep
    146              HEARTBEAT_ON();
   \   000000E0   0xF05F 0x4000      MOVS     R0,#-2147483648
   \   000000E4   0x4907             LDR.N    R1,??main_0+0x18  ;; 0x400e0c34
   \   000000E6   0x6008             STR      R0,[R1, #+0]
   \   000000E8   0xE7DB             B.N      ??main_1
   \   000000EA   0xBF00             Nop      
   \                     ??main_0:
   \   000000EC   0x........         DC32     ?_0
   \   000000F0   0x........         DC32     ?_1
   \   000000F4   0x........         DC32     G_u32SystemFlags
   \   000000F8   0xA5000001         DC32     0xa5000001
   \   000000FC   0x400E1250         DC32     0x400e1250
   \   00000100   0x400E0C30         DC32     0x400e0c30
   \   00000104   0x400E0C34         DC32     0x400e0c34
    147              
    148            } /* end while(1) main super loop */
    149            
    150          } /* end main() */

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x00000005         DC32 5, 4, 3, 2, 1
   \              0x00000004   
   \              0x00000003   
   \              0x00000002   
   \              0x00000001   

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x01 0x02          DC8 1, 2, 0, 0
   \              0x00 0x00    
    151          
    152          
    153          /*--------------------------------------------------------------------------------------------------------------------*/
    154          /* End of File */
    155          /*--------------------------------------------------------------------------------------------------------------------*/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      72   main
        72   -> AntInitialize
        72   -> AntRunActiveState
        72   -> ButtonInitialize
        72   -> ButtonRunActiveState
        72   -> ClockSetup
        72   -> DebugInitialize
        72   -> DebugRunActiveState
        72   -> GpioSetup
        72   -> InterruptSetup
        72   -> LcdInitialize
        72   -> LcdRunActiveState
        72   -> LedInitialize
        72   -> LedUpdate
        72   -> MessagingInitialize
        72   -> MessagingRunActiveState
        72   -> SdCardInitialize
        72   -> SdCardRunActiveState
        72   -> SspInitialize
        72   -> SspRunActiveState
        72   -> SysTickSetup
        72   -> SystemSleep
        72   -> SystemStatusReport
        72   -> TWIInitialize
        72   -> TWIRunActiveState
        72   -> UartInitialize
        72   -> UartRunActiveState
        72   -> UserAppInitialize
        72   -> UserAppRunActiveState
        72   -> WatchDogSetup
        72   -> __aeabi_memcpy4


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      20  ?_0
       4  ?_1
       4  G_u32ApplicationFlags
       4  G_u32SystemFlags
     264  main

 
   8 bytes in section .bss
  24 bytes in section .rodata
 264 bytes in section .text
 
 264 bytes of CODE  memory
  24 bytes of CONST memory
   8 bytes of DATA  memory

Errors: none
Warnings: 5
